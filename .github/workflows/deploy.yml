name: 🚀 Deploy to Production

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"

      - name: 📦 Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: 📦 Package for deployment
        run: |
          tar -czf deploy.tar.gz .next public package.json yarn.lock
          ls -la *.tar.gz

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: deploy.tar.gz
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-package
          path: .  # ⚠️ IMPORTANTE: Descargar en directorio actual

      - name: 🚀 Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "📍 Iniciando deploy en el servidor..."
            
            # 1. LIMPIAR PROCESOS ANTERIORES
            echo "🧹 Limpiando procesos anteriores..."
            pm2 delete ci-cd-calculator 2>/dev/null || true
            pkill -f "node.*3000" 2>/dev/null || true
            pkill -f "next.*start" 2>/dev/null || true
            pkill -f "yarn.*start" 2>/dev/null || true
            sleep 3  # Esperar que los procesos terminen
            
            # 2. VERIFICAR QUE EL PUERTO ESTÉ LIBRE
            echo "🔍 Verificando puerto 3000..."
            if sudo lsof -i :3000 || sudo ss -tulpn | grep :3000; then
                echo "❌ Puerto 3000 aún ocupado, forzando liberación..."
                sudo pkill -9 -f ":3000" 2>/dev/null || true
                sleep 2
            fi
            
            # 3. PREPARAR DIRECTORIO
            echo "📁 Preparando directorio..."
            mkdir -p /var/www/ci-cd-calculator
            cd /var/www/ci-cd-calculator
            
            # 4. EXTRAER NUEVOS ARCHIVOS
            echo "📦 Extrayendo archivos..."
            tar -xzf ../deploy.tar.gz -C .
            rm ../deploy.tar.gz
            
            # 5. INSTALAR DEPENDENCIAS COMPLETAS
            echo "🔧 Instalando dependencias..."
            yarn install  # ⚠️ SIN --production para incluir TypeScript
            
            # 6. CONSTRUIR APLICACIÓN
            echo "🏗️ Construyendo aplicación..."
            yarn build
            
            # 7. INICIAR APLICACIÓN CORRECTAMENTE
            echo "🎯 Iniciando aplicación..."
            export HOST=0.0.0.0  # ⚠️ Escuchar en todas las interfaces
            export PORT=3000
            
            # Detener cualquier instancia previa de PM2
            pm2 delete ci-cd-calculator 2>/dev/null || true
            
            # Iniciar nueva instancia
            pm2 start yarn --name "ci-cd-calculator" -- start --port=3000
            
            # 8. CONFIGURAR INICIO AUTOMÁTICO
            echo "⚙️ Configurando inicio automático..."
            pm2 save 2>/dev/null || true
            
            # 9. VERIFICAR DESPLIEGUE
            echo "✅ Verificando despliegue..."
            sleep 5  # Esperar que la app inicie
            
            # Verificar estado
            pm2 status
            
            # Verificar que está escuchando
            if sudo ss -tulpn | grep :3000; then
                echo "🎉 ¡Aplicación ejecutándose correctamente!"
                echo "🌐 Disponible en: http://167.99.182.242:3000"
            else
                echo "⚠️ La aplicación no está escuchando en el puerto 3000"
                echo "📋 Revisando logs..."
                pm2 logs ci-cd-calculator --lines 10
                exit 1
            fi
            
            # 10. LIMPIEZA FINAL
            echo "🧽 Limpieza final..."
            rm -f ../deploy.tar.gz 2>/dev/null || true
            
            echo "🚀 ¡Deploy completado exitosamente!"