name: 🚀 Deploy to Production

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"

      - name: 📦 Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - name: 📦 Package for deployment
        run: |
          tar -czf deploy.tar.gz .next public package.json yarn.lock
          ls -la *.tar.gz

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: deploy.tar.gz
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 15  # ⚠️ Aumentar timeout global

    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-package
          path: .

      - name: 🚀 Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_timeout: 10m  # ⚠️ Timeout de 10 minutos para SSH
          script: |
            echo "📍 Iniciando deploy..."
            
            # 1. LIMPIAR RÁPIDO
            echo "🧹 Limpiando procesos..."
            pm2 delete ci-cd-calculator 2>/dev/null || true
            pkill -f "node.*3000" 2>/dev/null || true
            sleep 1
            
            # 2. PREPARAR DIRECTORIO
            echo "📁 Preparando directorio..."
            mkdir -p /var/www/ci-cd-calculator
            cd /var/www/ci-cd-calculator
            
            # 3. EXTRAER ARCHIVOS
            echo "📦 Extrayendo archivos..."
            tar -xzf ../deploy.tar.gz -C .
            rm ../deploy.tar.gz
            
            # 4. INSTALAR DEPENDENCIAS (solo si package.json cambió)
            echo "🔧 Instalando dependencias..."
            yarn install --frozen-lockfile  # ⚠️ Más rápido que install completo
            
            # 5. CONSTRUIR APLICACIÓN
            echo "🏗️ Construyendo aplicación..."
            yarn build
            
            # 6. INICIAR APLICACIÓN
            echo "🎯 Iniciando aplicación..."
            export HOST=0.0.0.0
            pm2 delete ci-cd-calculator 2>/dev/null || true
            pm2 start yarn --name "ci-cd-calculator" -- start --port=3000
            
            # 7. VERIFICACIÓN RÁPIDA
            echo "✅ Verificación rápida..."
            sleep 3
            pm2 status | grep online && echo "🎉 ¡Aplicación online!" || echo "⚠️ Revisar logs"
            
            echo "🚀 ¡Deploy completado!"